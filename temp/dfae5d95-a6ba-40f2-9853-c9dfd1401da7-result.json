{"name": "首页测试用例12", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=95.0.4638.54)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x0028BDE3+2473443]\n\tOrdinal0 [0x00226661+2057825]\n\tOrdinal0 [0x00132300+1057536]\n\tOrdinal0 [0x00157E43+1211971]\n\tOrdinal0 [0x0015758A+1209738]\n\tOrdinal0 [0x001756E3+1332963]\n\tOrdinal0 [0x00153386+1192838]\n\tOrdinal0 [0x001757CA+1333194]\n\tOrdinal0 [0x00184ABF+1395391]\n\tOrdinal0 [0x001755AB+1332651]\n\tOrdinal0 [0x00152104+1188100]\n\tOrdinal0 [0x00152F59+1191769]\n\tGetHandleVerifier [0x00412266+1549718]\n\tGetHandleVerifier [0x004BD4A7+2250711]\n\tGetHandleVerifier [0x0031718B+521403]\n\tGetHandleVerifier [0x00316229+517465]\n\tOrdinal0 [0x0022B79D+2078621]\n\tOrdinal0 [0x0022FB58+2095960]\n\tOrdinal0 [0x0022FC92+2096274]\n\tOrdinal0 [0x00239541+2135361]\n\tBaseThreadInitThunk [0x7561FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x771E7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x771E7A6E+238]\n\t(No symbol) [0x00000000]", "trace": "self = <scr.testcase.test_homepage.TestHomePage object at 0x00000234260CD820>\ncaseinfo = [1, '找工作-输入搜索内容，点击搜索，成功展示标题包含输入内容的搜索内容', '成都', None, None]\n\n    @allure.story(\"首页模块测试\")\n    @allure.title(\"首页测试用例12\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.step(\"找工作-输入搜索内容，点击搜索，成功展示标题包含输入内容的搜索内容\")\n    @pytest.mark.parametrize('caseinfo', read_excel(\"./data/data.xlsx\", \"search1\"))\n    def test_homepage_12(self,caseinfo):\n        index, case_name, content, is_exe, result = caseinfo\n        allure.dynamic.description(case_name)\n        lp = scr.page.login_page.LoginPage(self.driver)\n        lp.login_step()\n        wk = scr.page.home_page.HomePage(self.driver)\n>       value = wk.search_work(content)\n\nscr\\testcase\\test_homepage.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nscr\\page\\home_page.py:119: in search_work\n    self.send_keys(self.find_body,content)\nscr\\common\\base_page.py:41: in send_keys\n    self.locate_element(args).send_keys(value)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:539: in send_keys\n    self._execute(Command.SEND_KEYS_TO_ELEMENT,\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:693: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:418: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000234260D9C40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...jectPath [0x771E7A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x771E7A6E+238]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=95.0.4638.54)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x0028BDE3+2473443]\nE       \tOrdinal0 [0x00226661+2057825]\nE       \tOrdinal0 [0x00132300+1057536]\nE       \tOrdinal0 [0x00157E43+1211971]\nE       \tOrdinal0 [0x0015758A+1209738]\nE       \tOrdinal0 [0x001756E3+1332963]\nE       \tOrdinal0 [0x00153386+1192838]\nE       \tOrdinal0 [0x001757CA+1333194]\nE       \tOrdinal0 [0x00184ABF+1395391]\nE       \tOrdinal0 [0x001755AB+1332651]\nE       \tOrdinal0 [0x00152104+1188100]\nE       \tOrdinal0 [0x00152F59+1191769]\nE       \tGetHandleVerifier [0x00412266+1549718]\nE       \tGetHandleVerifier [0x004BD4A7+2250711]\nE       \tGetHandleVerifier [0x0031718B+521403]\nE       \tGetHandleVerifier [0x00316229+517465]\nE       \tOrdinal0 [0x0022B79D+2078621]\nE       \tOrdinal0 [0x0022FB58+2095960]\nE       \tOrdinal0 [0x0022FC92+2096274]\nE       \tOrdinal0 [0x00239541+2135361]\nE       \tBaseThreadInitThunk [0x7561FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x771E7A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x771E7A6E+238]\nE       \t(No symbol) [0x00000000]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: ElementNotInteractableException"}, "description": "找工作-输入搜索内容，点击搜索，成功展示标题包含输入内容的搜索内容", "steps": [{"name": "找工作-输入搜索内容，点击搜索，成功展示标题包含输入内容的搜索内容", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=95.0.4638.54)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x0028BDE3+2473443]\n\tOrdinal0 [0x00226661+2057825]\n\tOrdinal0 [0x00132300+1057536]\n\tOrdinal0 [0x00157E43+1211971]\n\tOrdinal0 [0x0015758A+1209738]\n\tOrdinal0 [0x001756E3+1332963]\n\tOrdinal0 [0x00153386+1192838]\n\tOrdinal0 [0x001757CA+1333194]\n\tOrdinal0 [0x00184ABF+1395391]\n\tOrdinal0 [0x001755AB+1332651]\n\tOrdinal0 [0x00152104+1188100]\n\tOrdinal0 [0x00152F59+1191769]\n\tGetHandleVerifier [0x00412266+1549718]\n\tGetHandleVerifier [0x004BD4A7+2250711]\n\tGetHandleVerifier [0x0031718B+521403]\n\tGetHandleVerifier [0x00316229+517465]\n\tOrdinal0 [0x0022B79D+2078621]\n\tOrdinal0 [0x0022FB58+2095960]\n\tOrdinal0 [0x0022FC92+2096274]\n\tOrdinal0 [0x00239541+2135361]\n\tBaseThreadInitThunk [0x7561FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x771E7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x771E7A6E+238]\n\t(No symbol) [0x00000000]\n\n", "trace": "  File \"F:\\PytestUI_wapjgj\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"F:\\PytestUI_wapjgj\\scr\\testcase\\test_homepage.py\", line 161, in test_homepage_12\n    value = wk.search_work(content)\n  File \"F:\\PytestUI_wapjgj\\scr\\page\\home_page.py\", line 119, in search_work\n    self.send_keys(self.find_body,content)\n  File \"F:\\PytestUI_wapjgj\\scr\\common\\base_page.py\", line 41, in send_keys\n    self.locate_element(args).send_keys(value)\n  File \"F:\\PytestUI_wapjgj\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 539, in send_keys\n    self._execute(Command.SEND_KEYS_TO_ELEMENT,\n  File \"F:\\PytestUI_wapjgj\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 693, in _execute\n    return self._parent.execute(command, params)\n  File \"F:\\PytestUI_wapjgj\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 418, in execute\n    self.error_handler.check_response(response)\n  File \"F:\\PytestUI_wapjgj\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "caseinfo", "value": "[1, '找工作-输入搜索内容，点击搜索，成功展示标题包含输入内容的搜索内容', '成都', None, None]"}], "start": 1634979258174, "stop": 1634979266570}], "parameters": [{"name": "caseinfo", "value": "[1, '找工作-输入搜索内容，点击搜索，成功展示标题包含输入内容的搜索内容', '成都', None, None]"}], "start": 1634979258174, "stop": 1634979266570, "uuid": "a2e73902-356e-4316-89f7-0ed85b1dcf13", "historyId": "f7e5f423c161cbd713f92819f606d8db", "testCaseId": "3fc866ea0efa40455b05d6512da4b307", "fullName": "scr.testcase.test_homepage.TestHomePage#test_homepage_12", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "首页模块"}, {"name": "story", "value": "首页模块测试"}, {"name": "parentSuite", "value": "scr.testcase"}, {"name": "suite", "value": "test_homepage"}, {"name": "subSuite", "value": "TestHomePage"}, {"name": "host", "value": "DESKTOP-HT2VT3A"}, {"name": "thread", "value": "5576-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scr.testcase.test_homepage"}]}